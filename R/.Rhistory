}
find_starters <- function(season=most_recent_nba_season(), home_away="home") {
hoopR::load_nba_player_box(season=season) %>%
filter(starter, home_away == "home") %>%
group_by(game_id) %>%
mutate(starters=paste(athlete_id, collapse=", ")) %>%
select(game_id, starters) %>%
distinct() %>%
return()
}
home_starters <- find_starters(home_away="home")
away_starters <- find_starters(home_away="away")
enhance_pbp <- function(season=most_recent_nba_season()) {
home_starters <- find_starters(season=season, home_away="home")
away_starters <- find_starters(season=season, home_away="away")
player_dim <- create_player_dim(season=season)
hoopR::load_nba_pbp(season=season) %>%
left_join(home_starters, by=join_by(game_id == game_id)) %>%
left_join(away_starters, by=join_by(game_id == game_id)) %>%
left_join(player_dim, by=join_by(athlete_id_1 == athlete_id)) %>%
rename(athlete_name_1=athlete_display_name) %>%
left_join(player_dim, by=join_by(athlete_id_2 == athlete_id)) %>%
rename(athlete_name_2=athlete_display_name) %>%
left_join(player_dim, by=join_by(athlete_id_3 == athlete_id)) %>%
rename(athlete_name_3=athlete_display_name) %>%
mutate(
home_starters=ifelse(game_play_number > 2, NA, home_starters),
away_starters=ifelse(game_play_number > 2, NA, away_starters)
) %>%
return()
}
pbp <- enhance_pbp()
prep_pbp1 <- function(season=most_recent_nba_season()) {
home_starters <- find_starters(season=season, home_away="home")
away_starters <- find_starters(season=season, home_away="away")
player_dim <- create_player_dim(season=season)
hoopR::load_nba_pbp(season=season) %>%
left_join(home_starters, by=join_by(game_id == game_id)) %>%
left_join(away_starters, by=join_by(game_id == game_id)) %>%
left_join(player_dim, by=join_by(athlete_id_1 == athlete_id)) %>%
rename(athlete_name_1=athlete_display_name) %>%
left_join(player_dim, by=join_by(athlete_id_2 == athlete_id)) %>%
rename(athlete_name_2=athlete_display_name) %>%
left_join(player_dim, by=join_by(athlete_id_3 == athlete_id)) %>%
rename(athlete_name_3=athlete_display_name) %>%
mutate(
home_starters=ifelse(game_play_number > 2, NA, home_starters),
away_starters=ifelse(game_play_number > 2, NA, away_starters)
) %>%
return()
}
View(pbp)
prep_pbp_for_cum_stats1 <- function(season=most_recent_nba_season()) {
home_starters <- find_starters(season=season, home_away="home")
away_starters <- find_starters(season=season, home_away="away")
player_dim <- create_player_dim(season=season)
hoopR::load_nba_pbp(season=season) %>%
left_join(home_starters, by=join_by(game_id == game_id)) %>%
left_join(away_starters, by=join_by(game_id == game_id)) %>%
left_join(player_dim, by=join_by(athlete_id_1 == athlete_id)) %>%
rename(athlete_name_1=athlete_display_name) %>%
left_join(player_dim, by=join_by(athlete_id_2 == athlete_id)) %>%
rename(athlete_name_2=athlete_display_name) %>%
left_join(player_dim, by=join_by(athlete_id_3 == athlete_id)) %>%
rename(athlete_name_3=athlete_display_name) %>%
mutate(
home_starters=ifelse(game_play_number > 2, NA, home_starters),
away_starters=ifelse(game_play_number > 2, NA, away_starters)
) %>%
return()
}
prep_pbp_for_cum_stats2 <- function(season=most_recent_nba_season()) {
pbp <- prep_pbp_for_cum_stats1(season=season) %>%
filter(is.na(athlete_name_3), !is.na(athlete_name_1)) %>%
select(
game_id,
game_play_number,
start_game_seconds_remaining,
end_game_seconds_remaining,
athlete_name_1,
athlete_name_2,
text,
type_text,
shooting_play,
scoring_play
)
}
pbp <- prep_pbp_for_cum_stats2()
View(pbp)
pbp <- hoopR::load_nba_pbp()
View(filter(pbp, period == "OT1"))
View(filter(pbp, period == "OT"))
table(pbp$period_number)
table(pbp$period)
View(filter(pbp, period == "6"))
table(pbp$start_game_seconds_remaining)
max(pbp$start_game_seconds_remaining)
View(filter(pbp, game_id = 401705755))
View(filter(pbp, game_id == 401705755))
pbp <- prep_pbp_for_cum_stats2()
player_stats <- function(
game_id,
game_play_number,
start_game_seconds_remaining,
end_game_seconds_remaining,
player,
player_id,
text,
type_text,
shooting_play,
scoring_play
) {
box <- data.frame(
game_id=game_id,
game_play_number=game_play_number,
start_game_seconds_remaining=start_game_seconds_remaining,
end_game_seconds_remaining=end_game_seconds_remaining,
player_name=player,
twoa=0,
twom=0,
threea=0,
threem=0,
fta=0,
ftm=0,
oreb=0,
dreb=0,
ast=0,
stl=0,
blk=0,
to=0,
fls=0,
tech=0,
flagrant=0
)
if (player_id == 1) {
# If it's a shooting play, need to determine free throw, 2 pointer, or 3 pointer
if (shooting_play) {
type <- case_when(str_detect(text, "free") ~ "ft", str_detect(text, "three") ~ "three", TRUE ~ "two")
# Increment attempts
box[, paste0(type, "a")] <- 1
if (scoring_play) {
box[, paste0(type, "m")] <- 1
}
} else if (type_text == "Offensive Rebound") {
box$oreb <- 1
} else if (type_text == "Defensive Rebound") {
box$dreb <- 1
} else if (str_detect(type_text, "Turnover|Traveling|Charge")) {
box$to <- 1
} else if (type_text == "Flagrant Foul Type 1") {
box$flagrant <- 1
} else if (type_text == "Flagrant Foul Type 2") {
box$flagrant <- 2
} else if (str_detect(type_text, "Technical Foul")) {
box$tech <- 1
} else if (str_detect(type_text, "Foul") & !str_detect(type_text, "Technical|Flagrant")) {
box$fls <- 1
}
} else {
action <- str_extract(text, paste0("(?<=", player, " )\\S+"))
if (!is.na(action)) {
if (action == "assists)") {
box$ast <- 1
} else if (action == "blocks") {
box$blk <- 1
} else if (action == "steals)") {
box$stl <- 1
}
} else if (type_text == "Double Technical Foul") {
box$tech <- 1
}
}
return(box)
}
View(pbp)
play_stats <- bind_rows(
mutate(rename(pbp, player=athlete_name_1), player_id=1) %>%
pmap_dfr(player_stats),
mutate(rename(woof, player=athlete_name_2), player_id=2) %>%
filter(!is.na(player)) %>%
pmap_dfr(player_stats)
) %>%
arrange(game_id, game_play_number)
colnames(pbp)
colnames(mutate(rename(pbp, player=athlete_name_1), player_id=1))
player_stats <- function(
game_id,
game_play_number,
start_game_seconds_remaining,
end_game_seconds_remaining,
player,
text,
type_text,
shooting_play,
scoring_play,
player_id
) {
box <- data.frame(
game_id=game_id,
game_play_number=game_play_number,
start_game_seconds_remaining=start_game_seconds_remaining,
end_game_seconds_remaining=end_game_seconds_remaining,
player_name=player,
twoa=0,
twom=0,
threea=0,
threem=0,
fta=0,
ftm=0,
oreb=0,
dreb=0,
ast=0,
stl=0,
blk=0,
to=0,
fls=0,
tech=0,
flagrant=0
)
if (player_id == 1) {
# If it's a shooting play, need to determine free throw, 2 pointer, or 3 pointer
if (shooting_play) {
type <- case_when(str_detect(text, "free") ~ "ft", str_detect(text, "three") ~ "three", TRUE ~ "two")
# Increment attempts
box[, paste0(type, "a")] <- 1
if (scoring_play) {
box[, paste0(type, "m")] <- 1
}
} else if (type_text == "Offensive Rebound") {
box$oreb <- 1
} else if (type_text == "Defensive Rebound") {
box$dreb <- 1
} else if (str_detect(type_text, "Turnover|Traveling|Charge")) {
box$to <- 1
} else if (type_text == "Flagrant Foul Type 1") {
box$flagrant <- 1
} else if (type_text == "Flagrant Foul Type 2") {
box$flagrant <- 2
} else if (str_detect(type_text, "Technical Foul")) {
box$tech <- 1
} else if (str_detect(type_text, "Foul") & !str_detect(type_text, "Technical|Flagrant")) {
box$fls <- 1
}
} else {
action <- str_extract(text, paste0("(?<=", player, " )\\S+"))
if (!is.na(action)) {
if (action == "assists)") {
box$ast <- 1
} else if (action == "blocks") {
box$blk <- 1
} else if (action == "steals)") {
box$stl <- 1
}
} else if (type_text == "Double Technical Foul") {
box$tech <- 1
}
}
return(box)
}
play_stats <- bind_rows(
mutate(rename(pbp, player=athlete_name_1), player_id=1) %>%
select(-athlete_name_2) %>%
pmap_dfr(player_stats),
mutate(rename(woof, player=athlete_name_2), player_id=2) %>%
filter(!is.na(player)) %>%
select(-athlete_name_1) %>%
pmap_dfr(player_stats)
) %>%
arrange(game_id, game_play_number)
rlang::last_trace()
player_stats <- function(
game_id,
game_play_number,
start_game_seconds_remaining,
end_game_seconds_remaining,
player,
text,
type_text,
shooting_play,
scoring_play,
player_id
) {
box <- data.frame(
game_id=game_id,
game_play_number=game_play_number,
start_game_seconds_remaining=start_game_seconds_remaining,
end_game_seconds_remaining=end_game_seconds_remaining,
player_name=player,
sec=start_game_seconds_remaining - end_game_seconds_remaining
twoa=0,
player_stats <- function(
game_id,
game_play_number,
start_game_seconds_remaining,
end_game_seconds_remaining,
player,
text,
type_text,
shooting_play,
scoring_play,
player_id
) {
box <- data.frame(
game_id=game_id,
game_play_number=game_play_number,
start_game_seconds_remaining=start_game_seconds_remaining,
end_game_seconds_remaining=end_game_seconds_remaining,
player_name=player,
sec=start_game_seconds_remaining - end_game_seconds_remaining,
twoa=0,
twom=0,
threea=0,
threem=0,
fta=0,
ftm=0,
oreb=0,
dreb=0,
ast=0,
stl=0,
blk=0,
to=0,
fls=0,
tech=0,
flagrant=0
)
if (player_id == 1) {
# If it's a shooting play, need to determine free throw, 2 pointer, or 3 pointer
if (shooting_play) {
type <- case_when(str_detect(text, "free") ~ "ft", str_detect(text, "three") ~ "three", TRUE ~ "two")
# Increment attempts
box[, paste0(type, "a")] <- 1
if (scoring_play) {
box[, paste0(type, "m")] <- 1
}
} else if (type_text == "Offensive Rebound") {
box$oreb <- 1
} else if (type_text == "Defensive Rebound") {
box$dreb <- 1
} else if (str_detect(type_text, "Turnover|Traveling|Charge")) {
box$to <- 1
} else if (type_text == "Flagrant Foul Type 1") {
box$flagrant <- 1
} else if (type_text == "Flagrant Foul Type 2") {
box$flagrant <- 2
} else if (str_detect(type_text, "Technical Foul")) {
box$tech <- 1
} else if (str_detect(type_text, "Foul") & !str_detect(type_text, "Technical|Flagrant")) {
box$fls <- 1
}
} else {
action <- str_extract(text, paste0("(?<=", player, " )\\S+"))
if (!is.na(action)) {
if (action == "assists)") {
box$ast <- 1
} else if (action == "blocks") {
box$blk <- 1
} else if (action == "steals)") {
box$stl <- 1
}
} else if (type_text == "Double Technical Foul") {
box$tech <- 1
}
}
return(box)
}
bind_rows(
mutate(rename(pbp, player=athlete_name_1), player_id=1) %>%
select(-athlete_name_2) %>% colnames()
)
mutate(rename(pbp, player=athlete_name_1), player_id=1) %>%
select(-athlete_name_2) %>% colnames()
player_stats
library(hoopR)
library(stringr)
library(tidyverse)
#pbp <- hoopR::load_nba_pbp()
#box_scores <- hoopR::load_nba_player_box()
create_player_dim <- function(seasons=most_recent_nba_season()) {
box_scores <- hoopR::load_nba_player_box(seasons)
return(unique(box_scores[, c("athlete_id", "athlete_display_name", "season")]))
}
find_starters <- function(season=most_recent_nba_season(), home_away="home") {
hoopR::load_nba_player_box(season=season) %>%
filter(starter, home_away == "home") %>%
group_by(game_id) %>%
mutate(starters=paste(athlete_id, collapse=", ")) %>%
select(game_id, starters) %>%
distinct() %>%
return()
}
prep_pbp_for_cum_stats1 <- function(season=most_recent_nba_season()) {
home_starters <- find_starters(season=season, home_away="home")
away_starters <- find_starters(season=season, home_away="away")
player_dim <- create_player_dim(season=season)
hoopR::load_nba_pbp(season=season) %>%
left_join(home_starters, by=join_by(game_id == game_id)) %>%
left_join(away_starters, by=join_by(game_id == game_id)) %>%
left_join(player_dim, by=join_by(athlete_id_1 == athlete_id)) %>%
rename(athlete_name_1=athlete_display_name) %>%
left_join(player_dim, by=join_by(athlete_id_2 == athlete_id)) %>%
rename(athlete_name_2=athlete_display_name) %>%
left_join(player_dim, by=join_by(athlete_id_3 == athlete_id)) %>%
rename(athlete_name_3=athlete_display_name) %>%
mutate(
home_starters=ifelse(game_play_number > 2, NA, home_starters),
away_starters=ifelse(game_play_number > 2, NA, away_starters)
) %>%
return()
}
prep_pbp_for_cum_stats2 <- function(season=most_recent_nba_season()) {
pbp <- prep_pbp_for_cum_stats1(season=season) %>%
filter(is.na(athlete_name_3), !is.na(athlete_name_1)) %>%
select(
game_id,
game_play_number,
start_game_seconds_remaining,
end_game_seconds_remaining,
athlete_name_1,
athlete_name_2,
text,
type_text,
shooting_play,
scoring_play
)
}
player_stats <- function(
game_id,
game_play_number,
start_game_seconds_remaining,
end_game_seconds_remaining,
player,
text,
type_text,
shooting_play,
scoring_play,
player_id
) {
box <- data.frame(
game_id=game_id,
game_play_number=game_play_number,
start_game_seconds_remaining=start_game_seconds_remaining,
end_game_seconds_remaining=end_game_seconds_remaining,
player_name=player,
sec=start_game_seconds_remaining - end_game_seconds_remaining,
twoa=0,
twom=0,
threea=0,
threem=0,
fta=0,
ftm=0,
oreb=0,
dreb=0,
ast=0,
stl=0,
blk=0,
to=0,
fls=0,
tech=0,
flagrant=0
)
if (player_id == 1) {
# If it's a shooting play, need to determine free throw, 2 pointer, or 3 pointer
if (shooting_play) {
type <- case_when(str_detect(text, "free") ~ "ft", str_detect(text, "three") ~ "three", TRUE ~ "two")
# Increment attempts
box[, paste0(type, "a")] <- 1
if (scoring_play) {
box[, paste0(type, "m")] <- 1
}
} else if (type_text == "Offensive Rebound") {
box$oreb <- 1
} else if (type_text == "Defensive Rebound") {
box$dreb <- 1
} else if (str_detect(type_text, "Turnover|Traveling|Charge")) {
box$to <- 1
} else if (type_text == "Flagrant Foul Type 1") {
box$flagrant <- 1
} else if (type_text == "Flagrant Foul Type 2") {
box$flagrant <- 2
} else if (str_detect(type_text, "Technical Foul")) {
box$tech <- 1
} else if (str_detect(type_text, "Foul") & !str_detect(type_text, "Technical|Flagrant")) {
box$fls <- 1
}
} else {
action <- str_extract(text, paste0("(?<=", player, " )\\S+"))
if (!is.na(action)) {
if (action == "assists)") {
box$ast <- 1
} else if (action == "blocks") {
box$blk <- 1
} else if (action == "steals)") {
box$stl <- 1
}
} else if (type_text == "Double Technical Foul") {
box$tech <- 1
}
}
return(box)
}
pbp <- prep_pbp_for_cum_stats2()
play_stats <- bind_rows(
mutate(rename(pbp, player=athlete_name_1), player_id=1) %>%
select(-athlete_name_2) %>%
pmap_dfr(player_stats),
mutate(rename(pbp, player=athlete_name_2), player_id=2) %>%
filter(!is.na(player)) %>%
select(-athlete_name_1) %>%
pmap_dfr(player_stats)
) %>%
arrange(game_id, game_play_number)
View(play_stats)
